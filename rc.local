#!/bin/sh -e
#
# rc.local
#

# Print the IP address
_IP=$(hostname -I) || true
if [ "$_IP" ]; then
  printf "My IP address is %s\n" "$_IP"
fi

#sudo systemctl stop ntp;
#sudo ntpd -q -g >> /root/time.log

sudo rfkill block bluetooth;

sudo timedatectl >> /root/git.log;

LOC='/root'

if $(cd ${LOC}/BBSensor && git status --branch --porcelain | grep -q behind); then
    cd ${LOC}/BBSensor && git merge >> ${LOC}/git.log 2>&1
fi


((count = 20))                            # Maximum number to try.
while [[ $count -ne 0 ]] ; do
    ping -c 1 8.8.8.8                      # Try once.
    rc=$?
    if [[ $rc -eq 0 ]] ; then
        ((count = 1))                      # If okay, flag to exit loop.
    fi
    ((count = count - 1))                  # So we don't go forever.
done

if [[ $rc -eq 0 ]] ; then                  # Make final determination.

    RETRIES=5
    DELAY=10
    COUNT=1

    # Update the repo, with retries incase the sensor is not connected to the internet.

    while [ $COUNT -lt $RETRIES ]; do
        cd ${LOC}/BBSensor && git pull >> ${LOC}/git.log 2>&1

        if [ $? -eq 0 ]; then
            RETRIES=0
            break
        fi
        let COUNT=$COUNT+1
        sleep $DELAY
    done
fi


# transfer rules of usb transfer if they dont exist and reboot. 
if [ ! -f "/etc/udev/rules.d/optional_usb.rules" ]; then
    echo "Adding USB transfer rules";

    chmod a+x /root/BBSensor/usb/*;
    cp /root/BBSensor/usb/optional_usb.rules /etc/udev/rules.d/;
    chmod a+x /etc/udev/rules.d/optional_usb.rules;

    sudo reboot
fi

sudo timedatectl >> ${LOC}/git.log 2>&1;


cd ${LOC}/BBSensor && sudo python3 -m sensorpi >> /root/sensor.log &

#echo 'bbsensor00' | sudo tee  /etc/hostname

exit 0
